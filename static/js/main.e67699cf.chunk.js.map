{"version":3,"sources":["helpers/excelToJson.js","helpers/getGramianMatrix.js","helpers/getAlgebraicComplement.js","helpers/getMatrixMinor.js","helpers/getMatrixDeterminant.js","helpers/solveLinearSystemCramer.js","helpers/getApproximationPolynomial.js","helpers/roundNumber.js","client/components/chart/chart.js","client/components/table/table.js","client/components/approximator/approximator.js","helpers/getApproximationExponential.js","helpers/getApproximationPower.js","helpers/getMeasurementError.js","helpers/getAlphabet.js","helpers/sortArray.js","client/components/app/App.js","reportWebVitals.js","index.js"],"names":["excelToJson","file","Promise","resolve","reject","reader","FileReader","onload","e","data","target","result","workbook","XLSX","read","type","SheetNames","forEach","sheetName","XL_row_object","utils","sheet_to_row_object_array","Sheets","push","onerror","ex","readAsBinaryString","getGramianMatrix","arrayX","arrayY","m","n","length","gramianMatrix","sumsPowerX","powerIndex","sum","itemIndex","rowIndex","getAlgebraicComplement","matrix","i","j","getCofactor","getMatrixDeterminant","filter","_row","map","row","_col","colIndex","getMatrixMinor","determinant","rowsCount","col","solveLinearSystemCramer","squareMatrixA","arrayB","matrixDeterminant","index","getApproximationPolynomial","matrixA","slice","lastColumnIndex","approximationCoefs","reverse","roundNumber","number","digitsAfterPoint","Math","round","echarts","require","Chart","chartRef","className","ref","ChartContainer","option","chart","useRef","useEffect","current","init","setOption","Table","cellsEditable","cols","colsWidth","onCellChange","rows","textAlign","title","width","style","name","id","onChange","colId","value","_syntax","Approximator","approximationCoefsRounding","approximationCoefsRoundingMax","approximationCoefsRoundingMin","arePointsLoaded","chartOption","fileLoaderRef","onButtonBackClick","onButtonExcelClick","onButtonGetPointsDataExcelClick","onButtonGetPointsDataServerClick","onCellPointChange","onInputApproximationCoefsRoundingChange","pointsSource","tableApproximationCols","tableApproximationRows","tablePointsCols","tablePointsRows","onClick","step","min","max","ApproximatorContainer","useState","points","setPoints","pointsArrayX","useMemo","point","x","pointsArrayY","y","setApproximationCoefs","approximationCoefsMaxCount","setApproximationCoefsMaxCount","setApproximationCoefsRounding","approximationErrorType","approximationErrors","setApproximationErrors","approximationPointsX","setApproximationPointsX","approximationPointsXStep","setApproximationPointsXStep","approximationPointsY","setApproximationPointsY","approximationTypes","exponential","a","b","exp","linear","polynomial2","c","power","approximationTypesFunctionsMapping","approximationTypesHelpersMapping","log","coefs","getApproximationExponential","getApproximationPower","approximationTypesFunctionStringMapping","approximationTypesNamesMapping","setArePointsLoaded","setChartOption","setPointsSource","setTableApproximationCols","setTableApproximationRows","setTablePointsCols","setTablePointsRows","updatePointsData","useCallback","pointsData","abs","firebase","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","newPoints","pointIndex","toString","_","newApproximationCoefs","newApproximationPointsY","newApproximationErrors","approximationType","approximationFunction","arraySource","arrayResult","errorValue","valuesCount","valueIndex","sqrt","getMeasurementError","maxCoefsCount","tableCoefs","dataType","startCode","alphabetArray","Array","String","fromCharCode","join","getAlphabet","newTableApproximationCols","coef","newTableApproximationRows","array","field","isNaN","parseFloat","sort","sortArray","getChartTooltip","params","param","seriesName","series","symbolSize","smooth","tooltip","trigger","formatter","axisPointer","legend","item","xAxis","nameLocation","yAxis","fetchPointsDataExcel","files","excelData","alert","fetchPointsDataServer","database","on","snapshot","val","handleButtonBackClick","handleCellPointChange","handleInputApproximationCoefsRoundingChange","parseInt","handleInputApproximationPointsXStepChange","handleButtonExcelClick","handleButtonGetPointsDataExcelClick","handleButtonGetPointsDataServerClick","onInputApproximationPointsXStepChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e67699cf.chunk.js","sourcesContent":["import XLSX from \"xlsx\";\n\nexport default function excelToJson(file) {\n  return new Promise((resolve, reject) => {\n\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const data = e.target.result;\n      const workbook = XLSX.read(data, {\n        type: \"binary\"\n      });\n\n      const result = [];\n      workbook.SheetNames.forEach(function (sheetName) {\n        // console.log(workbook.Sheets[sheetName]);\n        const XL_row_object = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n        result.push(XL_row_object);\n      });\n      resolve(result);\n    };\n\n    reader.onerror = function (ex) {\n      reject(ex);\n    };\n\n    reader.readAsBinaryString(file);\n  });\n};\n","export default function getGramianMatrix(arrayX, arrayY, m) {\r\n  const n = arrayX.length;\r\n\r\n  const gramianMatrix = [[n]];\r\n\r\n  // Формируем суммы по степеням X\r\n  const sumsPowerX = [];\r\n  for (let powerIndex = 0; powerIndex <= m ** 2; ++powerIndex) {\r\n    let sum = 0;\r\n    for (let itemIndex = 0; itemIndex < n; ++itemIndex) {\r\n      sum += arrayX[itemIndex] ** (powerIndex + 1);\r\n    }\r\n    sumsPowerX.push(sum);\r\n  }\r\n\r\n  // Добавляем в матрицу сформированные суммы\r\n  for (let powerIndex = 0; powerIndex < m; ++powerIndex) {\r\n    gramianMatrix[0].push(sumsPowerX[powerIndex]);\r\n  }\r\n  for (let rowIndex = 1; rowIndex <= m; ++rowIndex) {\r\n    gramianMatrix[rowIndex] = [];\r\n    for (let powerIndex = 0; powerIndex <= m; ++powerIndex) {\r\n      gramianMatrix[rowIndex].push(sumsPowerX[rowIndex + powerIndex - 1]);\r\n    }\r\n  }\r\n\r\n  // Добавляем в матрицу суммы произведений (X**i * Y)\r\n  for (let powerIndex = 0; powerIndex <= m; ++powerIndex) {\r\n    let sum = 0;\r\n    for (let itemIndex = 0; itemIndex < n; ++itemIndex) {\r\n      sum += arrayX[itemIndex] ** powerIndex * arrayY[itemIndex];\r\n    }\r\n    gramianMatrix[powerIndex].push(sum)\r\n  }\r\n\r\n  return gramianMatrix;\r\n}\r\n","import getMatrixMinor from \"./getMatrixMinor\";\r\n\r\nfunction getCofactor(i, j) {\r\n  return (i + j) % 2 === 0 ? 1 : -1;\r\n}\r\n\r\nexport default function getAlgebraicComplement(matrix, i, j) {\r\n  return getCofactor(i, j) * getMatrixMinor(matrix, i, j);\r\n}\r\n","import getMatrixDeterminant from \"./getMatrixDeterminant\";\r\n\r\nexport default function getMatrixMinor(matrix, i, j) {\r\n  const subMatrix = matrix\r\n    .filter((_row, rowIndex) => rowIndex !== i)\r\n    .map(row => row.filter((_col, colIndex) => colIndex !== j));\r\n\r\n  return getMatrixDeterminant(subMatrix);\r\n}\r\n","import getAlgebraicComplement from \"./getAlgebraicComplement\";\r\n\r\nexport default function getMatrixDeterminant(matrix = []) {\r\n  let determinant = 0;\r\n  const rowsCount = matrix.length;\r\n\r\n  if (rowsCount) {\r\n    if (rowsCount === matrix[0].length) {\r\n      // Квадратная матрица\r\n      if (rowsCount === 1) return matrix[0][0];\r\n\r\n      matrix[0].forEach((col, colIndex) => {\r\n        determinant += col * getAlgebraicComplement(matrix, 0, colIndex);\r\n      })\r\n    } else {\r\n      //\r\n    }\r\n  }\r\n\r\n  return determinant;\r\n}\r\n","import getMatrixDeterminant from \"./getMatrixDeterminant\";\r\n\r\nexport default function solveLinearSystemCramer(squareMatrixA, arrayB) {\r\n  const arrayX = [];\r\n\r\n  const matrixDeterminant = getMatrixDeterminant(squareMatrixA);\r\n\r\n  if (matrixDeterminant !== 0) {\r\n    for (let index = 0; index < squareMatrixA.length; ++index) {\r\n      const matrix = squareMatrixA.map((row, rowIndex) => (\r\n        row.map((col, colIndex) => colIndex === index ? arrayB[rowIndex] : col)\r\n      ));\r\n\r\n      arrayX.push(getMatrixDeterminant(matrix) / matrixDeterminant);\r\n    }\r\n  }\r\n\r\n  return arrayX;\r\n}\r\n","import getGramianMatrix from \"./getGramianMatrix\";\r\nimport solveLinearSystemCramer from \"./solveLinearSystemCramer\";\r\n\r\nexport default function getApproximationPolynomial(arrayX, arrayY, m = 2) {\r\n  const\r\n    gramianMatrix = getGramianMatrix(arrayX, arrayY, m),\r\n    matrixA = gramianMatrix.map(row => row.slice(0, -1)),\r\n    lastColumnIndex = gramianMatrix[0].length - 1,\r\n    arrayB = gramianMatrix.map(row => row[lastColumnIndex]);\r\n\r\n  const approximationCoefs = solveLinearSystemCramer(matrixA, arrayB);\r\n  approximationCoefs.reverse();\r\n  return approximationCoefs;\r\n}\r\n","export default function roundNumber (number, digitsAfterPoint = 2) {\r\n  return Math.round(number * 10 ** digitsAfterPoint) / 10 ** digitsAfterPoint;\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\n\r\nimport \"./chart.scss\";\r\n\r\nconst echarts = require(\"echarts\");\r\n\r\nconst Chart = ({ chartRef }) => (\r\n  <div className=\"chart\">\r\n    <div ref={chartRef} className=\"chart__chart\"/>\r\n  </div>\r\n);\r\n\r\nconst ChartContainer = ({ option }) => {\r\n  const\r\n    chart = useRef(null),\r\n    chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    chart.current = echarts.init(chartRef.current);\r\n  }, [chartRef]);\r\n\r\n  useEffect(() => {\r\n    chart.current.setOption(option);\r\n  }, [option]);\r\n\r\n  return (\r\n    <Chart chartRef={chartRef}/>\r\n  )\r\n};\r\n\r\nexport default ChartContainer;\r\n","import React from \"react\";\r\nimport 'katex/dist/katex.min.css';\r\nimport { InlineMath } from 'react-katex';\r\n\r\nimport \"./table.scss\";\r\n\r\nconst Table = ({ cellsEditable, cols, colsWidth, onCellChange, rows, textAlign = \"center\", title, width }) => (\r\n  <div className=\"table\">\r\n    <p className=\"table__title\">{title}</p>\r\n    <table className=\"table__table\" style={{ width }}>\r\n      <thead>\r\n      <tr className=\"table__table-tr\">\r\n        {cols.map(col => (\r\n          <th\r\n            key={\"col-\" + col.id}\r\n            className={\"table__table-th table__table-th_align_\" + textAlign + (colsWidth ? \"\" : \" table__table-th_width_\" + cols.length)}\r\n          >\r\n            {col.name}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      {rows.map((row, rowIndex) => (\r\n        <tr key={\"row\" + rowIndex} className=\"table__table-tr\">\r\n          {cols.map((col, colIndex) => (\r\n            <td\r\n              key={\"col-\" + col.id}\r\n              className={\"table__table-td table__table-th_align_\" + textAlign + (colsWidth ? \"\" : \" table__table-td_width_\" + cols.length)}\r\n            >\r\n              {cellsEditable\r\n                ? (\r\n                  <input\r\n                    className={\"table__table-input table__table-input_align_\" + textAlign}\r\n                    onChange={e => onCellChange({ rowIndex, colId: col.id, colIndex, value: e.target.value })}\r\n                    value={row[col.id]}\r\n                  />\r\n                )\r\n                : col._syntax === \"tex\"\r\n                  ? <InlineMath>{row[col.id]}</InlineMath>\r\n                  : row[col.id]\r\n              }\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n\r\nexport default Table;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport React, { Fragment, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\nimport excelToJson from \"../../../helpers/excelToJson\";\r\nimport getAlphabet from \"../../../helpers/getAlphabet\";\r\nimport getApproximationExponential from \"../../../helpers/getApproximationExponential\";\r\nimport getApproximationPolynomial from \"../../../helpers/getApproximationPolynomial\";\r\nimport getApproximationPower from \"../../../helpers/getApproximationPower\";\r\nimport getMeasurementError from \"../../../helpers/getMeasurementError\";\r\nimport roundNumber from \"../../../helpers/roundNumber\";\r\nimport sortArray from \"../../../helpers/sortArray\";\r\n\r\nimport Chart from \"../chart\";\r\nimport Table from \"../table\";\r\n\r\nimport \"./approximator.scss\";\r\n\r\nconst Approximator = ({\r\n                        approximationCoefsRounding,\r\n                        approximationCoefsRoundingMax,\r\n                        approximationCoefsRoundingMin,\r\n                        arePointsLoaded,\r\n                        // approximationPointsXStep,\r\n                        chartOption,\r\n                        fileLoaderRef,\r\n                        onButtonBackClick,\r\n                        onButtonExcelClick,\r\n                        onButtonGetPointsDataExcelClick,\r\n                        onButtonGetPointsDataServerClick,\r\n                        onCellPointChange,\r\n                        onInputApproximationCoefsRoundingChange,\r\n                        pointsSource,\r\n                        // onInputApproximationPointsXStepChange,\r\n                        tableApproximationCols,\r\n                        tableApproximationRows,\r\n                        tablePointsCols,\r\n                        tablePointsRows\r\n                      }) => (\r\n  <div className=\"approximator\">\r\n\r\n    {arePointsLoaded\r\n      ? (\r\n        <Fragment>\r\n          <div className=\"approximator__group\">\r\n            <button className=\"approximator__group-button\" onClick={onButtonBackClick}>Вернуться к загрузке</button>\r\n          </div>\r\n\r\n          <div className=\"approximator__group\">\r\n            <div className=\"approximator__group-header\">\r\n              <p className=\"approximator__group-title\">Исходные данные</p>\r\n              <p className=\"approximator__group-subtitle\">Значения ячеек для X и Y можно изменять. При их обновлении\r\n                производится автоматический перерасчет.</p>\r\n            </div>\r\n            <Table\r\n              cellsEditable={true}\r\n              cols={tablePointsCols}\r\n              onCellChange={onCellPointChange}\r\n              rows={tablePointsRows}\r\n              width=\"100%\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"approximator__group\">\r\n            <div className=\"approximator__group-header\">\r\n              <p className=\"approximator__group-title\">Результаты аппроксимации</p>\r\n              <p className=\"approximator__group-subtitle\">Выберите количество знаков после запятой при округлении:</p>\r\n              <input\r\n                type=\"number\"\r\n                step={1}\r\n                min={approximationCoefsRoundingMin}\r\n                max={approximationCoefsRoundingMax}\r\n                value={approximationCoefsRounding}\r\n                onChange={e => onInputApproximationCoefsRoundingChange(e.target.value)}\r\n              />\r\n            </div>\r\n            <Table\r\n              cols={tableApproximationCols}\r\n              rows={tableApproximationRows}\r\n              width=\"100%\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"approximator__group\">\r\n            <div className=\"approximator__group-header\">\r\n              <p className=\"approximator__group-title\">Графики функций</p>\r\n              <p className=\"approximator__group-subtitle\">\r\n                Клик на элемент легенды приводит к скрытию/отображению соответствующего графика.\r\n              </p>\r\n              <p className=\"approximator__group-subtitle\">\r\n                График интерактивный - при движении мышью по нему отображается подробная информация о значениях.\r\n              </p>\r\n              {/*<p className=\"approximator__group-subtitle\">Шаг по оси абсцисс для аппроксимирующих функций</p>*/}\r\n              {/*<input*/}\r\n              {/*  type=\"number\"*/}\r\n              {/*  step={0.05}*/}\r\n              {/*  min={0.05}*/}\r\n              {/*  max={1}*/}\r\n              {/*  value={approximationPointsXStep}*/}\r\n              {/*  onChange={e => onInputApproximationPointsXStepChange(e.target.value)}*/}\r\n              {/*/>*/}\r\n            </div>\r\n            <Chart\r\n              option={chartOption}\r\n            />\r\n          </div>\r\n        </Fragment>\r\n      )\r\n      : (\r\n        <div className=\"approximator__group\">\r\n          <div className=\"approximator__group-header\">\r\n            <p className=\"approximator__group-title\">Загрузка данных для аппроксимации</p>\r\n            <p className=\"approximator__group-subtitle\">Выберите тип получения данных</p>\r\n          </div>\r\n          <div className=\"approximator__group-buttons\">\r\n            <div className=\"approximator__group-buttons-row\">\r\n              <button className=\"approximator__group-button\" onClick={onButtonGetPointsDataServerClick}>Сервер</button>\r\n            </div>\r\n            <div className=\"approximator__group-buttons-row\">\r\n              <button className=\"approximator__group-button\" onClick={onButtonExcelClick}>Excel</button>\r\n              {pointsSource === \"excel\" && (\r\n                <div className=\"approximator__group-buttons-row\">\r\n                  <input ref={fileLoaderRef} type=\"file\" className=\"approximator__group-file-loader\"/>\r\n                  <button className=\"approximator__group-button\" onClick={onButtonGetPointsDataExcelClick}>Загрузить\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  </div>\r\n);\r\n\r\nconst ApproximatorContainer = () => {\r\n  const [points, setPoints] = useState([]);\r\n  const pointsArrayX = useMemo(() => points.map(point => point.x), [points]);\r\n  const pointsArrayY = useMemo(() => points.map(point => point.y), [points]);\r\n\r\n  const [approximationCoefs, setApproximationCoefs] = useState({});\r\n  const [approximationCoefsMaxCount, setApproximationCoefsMaxCount] = useState(0);\r\n  const [approximationCoefsRounding, setApproximationCoefsRounding] = useState(3);\r\n  const [approximationCoefsRoundingMax] = useState(6);\r\n  const [approximationCoefsRoundingMin] = useState(1);\r\n  const [approximationErrorType] = useState(\"std\");\r\n  const [approximationErrors, setApproximationErrors] = useState({});\r\n  const [approximationPointsX, setApproximationPointsX] = useState([]);\r\n  const [approximationPointsXStep, setApproximationPointsXStep] = useState(0.1);\r\n  const [approximationPointsY, setApproximationPointsY] = useState({});\r\n  const [approximationTypes] = useState([\"exponential\", \"linear\", \"polynomial2\", \"power\"]);\r\n  const [approximationTypesFunctionsMapping] = useState({\r\n    exponential: (x, a, b) => a * Math.exp(b * x),\r\n    linear: (x, a, b) => a * x + b,\r\n    polynomial2: (x, a, b, c) => a * x ** 2 + b * x + c,\r\n    power: (x, a, b) => a * x ** b\r\n  });\r\n  const approximationTypesHelpersMapping = useMemo(() => ({\r\n    exponential: () => getApproximationExponential(pointsArrayX, pointsArrayY),\r\n    linear: () => getApproximationPolynomial(pointsArrayX, pointsArrayY, 1),\r\n    polynomial2: () => getApproximationPolynomial(pointsArrayX, pointsArrayY, 2),\r\n    power: () => getApproximationPower(pointsArrayX, pointsArrayY),\r\n  }), [pointsArrayX, pointsArrayY]);\r\n  const [approximationTypesFunctionStringMapping] = useState({\r\n    exponential: \"ae ^ {bx}\",\r\n    linear: \"ax + b\",\r\n    polynomial2: \"ax ^ 2 + bx + c\",\r\n    power: \"ax ^ b\"\r\n  });\r\n  const [approximationTypesNamesMapping] = useState({\r\n    exponential: \"Экспоненциальная\",\r\n    linear: \"Линейная\",\r\n    polynomial2: \"Полиномиальная (степень 2)\",\r\n    power: \"Степенная\"\r\n  });\r\n  const [arePointsLoaded, setArePointsLoaded] = useState(false);\r\n  const [chartOption, setChartOption] = useState({});\r\n  const fileLoaderRef = useRef(null);\r\n  const [pointsSource, setPointsSource] = useState(null);\r\n  const [tableApproximationCols, setTableApproximationCols] = useState([]);\r\n  const [tableApproximationRows, setTableApproximationRows] = useState([]);\r\n  const [tablePointsCols, setTablePointsCols] = useState([]);\r\n  const [tablePointsRows, setTablePointsRows] = useState([]);\r\n\r\n  /* Update points */\r\n  const updatePointsData = useCallback(pointsData => {\r\n    setPoints(pointsData);\r\n    setApproximationPointsX(pointsData.map(point => point.x));\r\n    setApproximationPointsXStep(roundNumber(Math.abs(pointsData[1].x - pointsData[0].x), 1));\r\n    setArePointsLoaded(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!firebase.apps.length) {\r\n      const firebaseConfig = {\r\n        apiKey: \"AIzaSyCGJlVdf6WnA4NZPMBr3CZ8g5mel6lJh1U\",\r\n        authDomain: \"data-approximation.firebaseapp.com\",\r\n        databaseURL: \"https://data-approximation-default-rtdb.firebaseio.com\",\r\n        projectId: \"data-approximation\",\r\n        storageBucket: \"data-approximation.appspot.com\",\r\n        messagingSenderId: \"782751732208\",\r\n        appId: \"1:782751732208:web:890c565a3f68e4c0d74d35\"\r\n      };\r\n      firebase.initializeApp(firebaseConfig);\r\n    }\r\n  }, []);\r\n\r\n  /* Update points table */\r\n  useEffect(() => {\r\n    const newPoints = [{}, {}];\r\n\r\n    points.forEach((point, pointIndex) => {\r\n      const colId = (pointIndex + 1).toString();\r\n      newPoints[0][colId] = point.x;\r\n      newPoints[1][colId] = point.y;\r\n    });\r\n\r\n    setTablePointsRows(newPoints);\r\n\r\n    setTablePointsCols(points.map((_, pointIndex) => {\r\n      const colId = (pointIndex + 1).toString();\r\n      return ({ id: colId, name: colId });\r\n    }));\r\n  }, [points]);\r\n\r\n  /* Update approximation coefs, points & errors */\r\n  useEffect(() => {\r\n    const\r\n      newApproximationCoefs = {},\r\n      newApproximationPointsY = {},\r\n      newApproximationErrors = {};\r\n\r\n    approximationTypes.forEach(approximationType => {\r\n      const approximationFunction = approximationTypesFunctionsMapping[approximationType];\r\n\r\n      newApproximationCoefs[approximationType] = approximationTypesHelpersMapping[approximationType]();\r\n      newApproximationPointsY[approximationType] = (approximationPointsX || []).map(x => approximationFunction(x, ...newApproximationCoefs[approximationType]));\r\n      newApproximationErrors[approximationType] = getMeasurementError(pointsArrayY, newApproximationPointsY[approximationType], approximationErrorType);\r\n    });\r\n\r\n    setApproximationCoefs(newApproximationCoefs);\r\n    setApproximationPointsY(newApproximationPointsY);\r\n    // console.log(approximationPointsX);\r\n    // console.log(newApproximationPointsY);\r\n    setApproximationErrors(newApproximationErrors);\r\n  }, [approximationErrorType, approximationPointsX, approximationTypes, approximationTypesFunctionsMapping, approximationTypesHelpersMapping, pointsArrayY]);\r\n\r\n  /* Update approximation coefs max count */\r\n  useEffect(() => {\r\n    let maxCoefsCount = 0;\r\n\r\n    for (const approximationType in approximationCoefs) {\r\n      const coefs = approximationCoefs[approximationType];\r\n      if (coefs && coefs.length > maxCoefsCount) {\r\n        maxCoefsCount = coefs.length;\r\n      }\r\n    }\r\n\r\n    setApproximationCoefsMaxCount(maxCoefsCount);\r\n  }, [approximationCoefs]);\r\n\r\n  /* Update approximation table cols */\r\n  useEffect(() => {\r\n    const tableCoefs = getAlphabet(\"eng\", approximationCoefsMaxCount, \"array\");\r\n\r\n    const\r\n      newTableApproximationCols = [\r\n        { id: \"approximationType\", name: \"Тип аппроксимации\" },\r\n        { id: \"approximationTypeFunction\", name: \"Вид функции\", _syntax: \"tex\" },\r\n        { id: \"approximationError\", name: \"Погрешность\" },\r\n        ...tableCoefs.map(coef => ({ id: \"coef-\" + coef, name: coef }))\r\n      ];\r\n\r\n    setTableApproximationCols(newTableApproximationCols);\r\n  }, [approximationCoefsMaxCount]);\r\n\r\n  /* Update approximation table rows */\r\n  useEffect(() => {\r\n    const newTableApproximationRows = [];\r\n\r\n    for (const approximationType in approximationCoefs) {\r\n      const coefs = approximationCoefs[approximationType];\r\n\r\n      const row = {};\r\n      tableApproximationCols.forEach((col, colIndex) => {\r\n        row[col.id] = colIndex > 2\r\n          ? roundNumber(coefs[colIndex - 3], approximationCoefsRounding) || \"\"\r\n          : col.id === \"approximationError\"\r\n            ? roundNumber(approximationErrors[approximationType], approximationCoefsRounding) || \"\"\r\n            : col.id === \"approximationTypeFunction\"\r\n              ? approximationTypesFunctionStringMapping[approximationType]\r\n              : approximationTypesNamesMapping[approximationType];\r\n      });\r\n\r\n      newTableApproximationRows.push(row);\r\n    }\r\n\r\n    sortArray(newTableApproximationRows, \"asc\", \"approximationError\");\r\n\r\n    setTableApproximationRows(newTableApproximationRows);\r\n  }, [\r\n    approximationCoefs, approximationCoefsRounding,\r\n    approximationErrors, approximationTypesFunctionStringMapping, approximationTypesNamesMapping,\r\n    tableApproximationCols\r\n  ]);\r\n\r\n  /* Chart tooltip */\r\n  const getChartTooltip = useCallback(params => (\r\n    `<table class=\"approximator__chart-tooltip-table\" border=\"1\">\r\n      <thead>\r\n        <tr>\r\n            ${params.map(param => `<th class=\"approximator__chart-tooltip-th\">${param.seriesName}</th>`).join(\"\")}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n            ${params.map(param => `<td class=\"approximator__chart-tooltip-td\">${roundNumber(param.value, approximationCoefsRounding)}</td>`).join(\"\")}\r\n        </tr>\r\n      </tbody>\r\n    </table>`\r\n  ), [approximationCoefsRounding]);\r\n\r\n  /* Update chart */\r\n  useEffect(() => {\r\n    const series = [\r\n      {\r\n        symbolSize: 8,\r\n        data: pointsArrayY,\r\n        type: \"scatter\",\r\n        name: \"Исходное значение\"\r\n      }\r\n    ];\r\n\r\n    for (const approximationType in approximationPointsY) {\r\n      series.push({\r\n        symbolSize: 3,\r\n        data: approximationPointsY[approximationType],\r\n        type: \"line\",\r\n        smooth: true,\r\n        name: approximationTypesNamesMapping[approximationType]\r\n      });\r\n    }\r\n\r\n    setChartOption({\r\n      tooltip: {\r\n        trigger: \"axis\",\r\n        formatter: getChartTooltip,\r\n        axisPointer: {\r\n          type: \"cross\"\r\n        }\r\n      },\r\n      legend: {\r\n        legend: {\r\n          data: series.map(item => item.name)\r\n        },\r\n      },\r\n      xAxis: {\r\n        type: \"category\",\r\n        data: pointsArrayX,\r\n        nameLocation: 'middle'\r\n      },\r\n      yAxis: {\r\n        type: \"value\"\r\n      },\r\n      series\r\n    });\r\n  }, [approximationPointsY, approximationTypesNamesMapping, getChartTooltip, pointsArrayX, pointsArrayY]);\r\n\r\n  const fetchPointsDataExcel = useCallback(() => new Promise(async resolve => {\r\n    if (fileLoaderRef.current) {\r\n      const file = fileLoaderRef.current.files[0];\r\n\r\n      if (file) {\r\n        const excelData = await excelToJson(file);\r\n        resolve(excelData[0]);\r\n      } else {\r\n        alert(\"Ошибка! Попробуйте загрузить файл еще раз.\");\r\n      }\r\n    }\r\n  }), [fileLoaderRef]);\r\n\r\n  const fetchPointsDataServer = useCallback(() => new Promise(resolve => {\r\n    const pointsDatabaseRef = firebase.database().ref(\"/points\");\r\n    pointsDatabaseRef.on(\"value\", snapshot => resolve(snapshot.val()));\r\n  }), []);\r\n\r\n  const handleButtonBackClick = useCallback(() => {\r\n    setArePointsLoaded(false);\r\n  }, [setArePointsLoaded]);\r\n\r\n  const handleCellPointChange = useCallback(({ rowIndex, colIndex, value }) => {\r\n    setPoints(points => points.map((point, pointIndex) => pointIndex === colIndex\r\n      ? rowIndex === 0\r\n        ? { x: value, y: point.y }\r\n        : { x: point.x, y: value }\r\n      : point));\r\n  }, []);\r\n\r\n  const handleInputApproximationCoefsRoundingChange = useCallback(value => {\r\n    setApproximationCoefsRounding(parseInt(value) || approximationCoefsRoundingMin);\r\n  }, [approximationCoefsRoundingMin]);\r\n\r\n  const handleInputApproximationPointsXStepChange = useCallback(value => {\r\n    setApproximationPointsXStep(parseFloat(value) || 0.1);\r\n  }, []);\r\n\r\n  const handleButtonExcelClick = useCallback(() => {\r\n    setPointsSource(\"excel\");\r\n  }, [setPointsSource]);\r\n\r\n  const handleButtonGetPointsDataExcelClick = useCallback(async () => {\r\n    updatePointsData(await fetchPointsDataExcel());\r\n  }, [fetchPointsDataExcel, updatePointsData]);\r\n\r\n  const handleButtonGetPointsDataServerClick = useCallback(async () => {\r\n    updatePointsData(await fetchPointsDataServer());\r\n  }, [fetchPointsDataServer, updatePointsData]);\r\n\r\n  return (\r\n    <Approximator\r\n      approximationCoefsRounding={approximationCoefsRounding}\r\n      approximationCoefsRoundingMax={approximationCoefsRoundingMax}\r\n      approximationCoefsRoundingMin={approximationCoefsRoundingMin}\r\n      approximationPointsXStep={approximationPointsXStep}\r\n      arePointsLoaded={arePointsLoaded}\r\n      chartOption={chartOption}\r\n      fileLoaderRef={fileLoaderRef}\r\n      onButtonBackClick={handleButtonBackClick}\r\n      onButtonExcelClick={handleButtonExcelClick}\r\n      onButtonGetPointsDataExcelClick={handleButtonGetPointsDataExcelClick}\r\n      onButtonGetPointsDataServerClick={handleButtonGetPointsDataServerClick}\r\n      onCellPointChange={handleCellPointChange}\r\n      onInputApproximationCoefsRoundingChange={handleInputApproximationCoefsRoundingChange}\r\n      onInputApproximationPointsXStepChange={handleInputApproximationPointsXStepChange}\r\n      pointsSource={pointsSource}\r\n      tableApproximationCols={tableApproximationCols}\r\n      tableApproximationRows={tableApproximationRows}\r\n      tablePointsCols={tablePointsCols}\r\n      tablePointsRows={tablePointsRows}\r\n    />\r\n  )\r\n};\r\n\r\nexport default ApproximatorContainer;\r\n","import getGramianMatrix from \"./getGramianMatrix\";\r\nimport solveLinearSystemCramer from \"./solveLinearSystemCramer\";\r\n\r\nexport default function getApproximationExponential(arrayX, arrayY) {\r\n  const\r\n    lnArrayY = arrayY.map(value => Math.log(value)),\r\n    gramianMatrix = getGramianMatrix(arrayX, lnArrayY, 1),\r\n    matrixA = gramianMatrix.map(row => row.slice(0, -1)),\r\n    lastColumnIndex = gramianMatrix[0].length - 1,\r\n    arrayB = gramianMatrix.map(row => row[lastColumnIndex]),\r\n    coefs = solveLinearSystemCramer(matrixA, arrayB);\r\n\r\n  return [Math.exp(coefs[0]), coefs[1]];\r\n}\r\n","import getGramianMatrix from \"./getGramianMatrix\";\r\nimport solveLinearSystemCramer from \"./solveLinearSystemCramer\";\r\n\r\nexport default function getApproximationPower(arrayX, arrayY) {\r\n  const\r\n    lnArrayX = arrayX.map(value => Math.log(value)),\r\n    lnArrayY = arrayY.map(value => Math.log(value)),\r\n    gramianMatrix = getGramianMatrix(lnArrayX, lnArrayY, 1),\r\n    matrixA = gramianMatrix.map(row => row.slice(0, -1)),\r\n    lastColumnIndex = gramianMatrix[0].length - 1,\r\n    arrayB = gramianMatrix.map(row => row[lastColumnIndex]),\r\n    coefs = solveLinearSystemCramer(matrixA, arrayB);\r\n\r\n  return [Math.exp(coefs[0]), coefs[1]];\r\n}\r\n","export default function getMeasurementError(arraySource, arrayResult, type = \"std\") {\r\n  let errorValue = 0;\r\n\r\n  if (type === \"std\") {\r\n    const valuesCount = arraySource.length;\r\n    for (let valueIndex = 0; valueIndex < valuesCount; ++valueIndex) {\r\n      errorValue += (arraySource[valueIndex] - arrayResult[valueIndex]) ** 2;\r\n    }\r\n    errorValue = Math.sqrt(errorValue / valuesCount);\r\n  }\r\n\r\n  return errorValue;\r\n}\r\n","export default function getAlphabet(language = \"eng\", length = 26, dataType = \"array\") {\r\n  const\r\n    startCode = language === \"eng\" ? 97 : 97,\r\n    alphabetArray = [...Array(length)].map((_, index) => String.fromCharCode(index + startCode));\r\n\r\n  return dataType === \"array\"\r\n    ? alphabetArray\r\n    : alphabetArray.join(\"\");\r\n}\r\n","export default function sortArray(array, order = \"asc\", field) {\r\n  typeof array[0] === \"object\"\r\n    ? array.sort((a, b) => a[field] < b[field]\r\n    ? -1\r\n    : a[field] == b[field]\r\n      ? 0\r\n      : 1\r\n    )\r\n    : isNaN(parseFloat(array[0]))\r\n    ? array.sort((a, b) => a[field] < b[field]\r\n      ? -1\r\n      : a[field] == b[field]\r\n        ? 0\r\n        : 1\r\n    )\r\n    : array.sort((a, b) => a - b)\r\n}\r\n","import React from \"react\";\n\nimport \"./App.css\";\n\nimport Approximator from \"../approximator\";\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <Approximator/>\n    </header>\n  </div>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./client/components/app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}